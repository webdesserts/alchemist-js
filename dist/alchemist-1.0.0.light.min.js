// Alchemist.js v1.0.0 | license: MIT
!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define(t):"object"==typeof exports?exports.Alchemist=t():e.Alchemist=t()}(this,function(){return function(e){function t(r){if(n[r])return n[r].exports;var i=n[r]={exports:{},id:r,loaded:!1};return e[r].call(i.exports,i,i.exports,t),i.loaded=!0,i.exports}var n={};return t.m=e,t.c=n,t.p="",t(0)}([function(e,t,n){"use strict";var r=n(1);e.exports=r},function(e,t,n){"use strict";var r=n(2),i=n(3),o=n(4),s=n(5),c=n(6),a=n(7),u=n(10),h=u.extend();h.init=function(e){var t=s.create();e=e||{},this.white=e.white||{X:.95047,Y:1,Z:1.08883},this.spaces=t,this.BaseSpace=i.create({converter:o.create(t),precision:e.precision||9,limiter:c.create(null,null,e.limits||"nullify")})},h.use=function(e){if(a.isArray(e))for(var t=0;t<e.length;t++)this.use(e[t]);else switch("function"==typeof e&&(e=e.call(this,this)),r.identify(e)){case"space":this.attachColorSpace(e);break;case"method":this.attachColorMethod(e)}},h.attachColorSpace=function(e){var t=this.spaces.find(e.name);if(t&&t.is_concrete)throw new Error('The "'+e.name+'" plugin already exists');var n=r.serializeColorSpace(e,this.BaseSpace);this.spaces.merge(n),this.spaces.each(function(e){e.is_concrete&&(this.makeConstructorMethod(e),this.makeConversionMethod(e))},this)},h.attachColorMethod=function(e){if(e.methods.color&&this.BaseSpace[e.name])throw new Error('The method name "'+e.name+'" already exists for colors');if(e.methods.global&&this[e.name])throw new Error('The method name "'+e.name+'" already exists on alchemist');e.methods.color&&(this.BaseSpace[e.name]=e.methods.color),e.methods.global&&(this[e.name]=e.methods.global)},h.makeConstructorMethod=function(e){this[e.space]=function(t){var n;return n=arguments.length>1?Array.prototype.slice.call(arguments):t,e.create(n)}},h.makeConversionMethod=function(e){this.BaseSpace[e.space]=function(t){return this.to(e.space,t)}},h.init(),e.exports=h},function(e,t,n){"use strict";var r=n(5),i=n(8),o=n(7),s={};s.identify=function(e){if(this.validatePlugin(e),e.to||e.from)return this.validateColorSpacePlugin(e),"space";if(e.methods)return this.validateMethodPlugin(e),"method";throw new Error("Unrecognized plugin format")},s.validatePlugin=function(e){if(!o.isObject(e))throw new Error("Expected plugin to be an object; instead got: "+e);if(!o.isString(e.name))throw new Error("Expect plguin.name to be a string; instead got: "+e.name)},s.validateColorSpacePlugin=function(e){if(!e.to&&!e.from)throw new Error('Conversions were not defined for the "'+e.name+'" colorspace plugin')},s.validateMethodPlugin=function(e){if(!e.methods.color&&!e.methods.global)throw new Error("Missing methods for method plugin");if(e.methods.color&&!o.isFunction(e.methods.color))throw new Error("Expected color method to be a function; instead got "+e.methods.color);if(e.methods.global&&!o.isFunction(e.methods.global))throw new Error("Expected color method to be a function; instead got "+e.methods.color)},s.serializeColorSpace=function(e,t){var n,s,c,a;if(!o.isString(e.name))throw new Error("color-space plugin is missing a name");n=r.create(),s=t.create({space:e.name,conversions:i.create()}),t.limits&&e.limits&&(s.limits=t.limits.create(e.limits.min,e.limits.max)),n.add(s);for(var u in e.to){if(a=e.to[u],"function"!=typeof a)throw new Error("expected "+a+" to be a function");s.conversions.add(u,e.to[u])}for(var h in e.from){if(a=e.from[h],"function"!=typeof a)throw new Error("expected "+a+" to be a function");c=t.create({space:h,"abstract":!0,conversions:i.create()}),c.conversions.add(e.name,e.from[h]),n.add(c)}return n},e.exports=s},function(e,t,n){"use strict";var r=n(7),i=n(10),o=i.extend();o.init=function(e,t){r.isPlainObject(arguments[0])?t=arguments[0]:void 0!==e&&(this.value=this.limits?this.limits.check(e):e),t=t||{},t.limiter&&(this.limits=t.limiter),t.precision&&(this.precision=t.precision),t.converter&&(this.converter=t.converter),t.conversions&&(this.conversions=t.conversions),t.space&&(this.space=t.space),this.is_concrete=!t.abstract},o.to=function(e,t){t=t||{};var n=this.as(e);return null===t.precision?n.val:n.round(t.precision)},o.as=function(e){return this.converter.convert(this,e)},o.round=function(e){return r.round(this.value,e||this.precision)},e.exports=o},function(e,t,n){"use strict";var r=n(7),i=n(10),o=i.extend();o.init=function(e){this.spaces=e},o.convert=function(e,t){var n=e.space;if(n===t)return e;if(!this.spaces.has(n))throw new Error("could not find the "+n+" color space");if(!this.spaces.has(t))throw new Error("could not find the "+t+" color space");var r=e.conversions.find(t);if("function"==typeof r)return this.applyConversion(e,t);if("string"==typeof r){var i=this.applyConversion(e,r);return this.convert(i,t)}var o=this.mapConversionPath(n,t);if(o)return this.convert(e,t);throw new Error("Alchemist does not know how to convert from "+n+" to "+t)},o.applyConversion=function(e,t){var n,i,o=e.conversions.find(t);if("function"!=typeof o)throw new TypeError("expected "+o+" to be a function");return n=null===e.value?e.value:r.isArray(e.value)?o.apply(e,r.clone(e.value)):o.call(e,r.clone(e.value)),i=this.spaces.find(t).create(n)},o.mapConversionPath=function(e,t){var n,r=this.findConversionPath(e,t);if(!r)return null;for(var i=r[t],o=r[i],s=0;100>s;){if(n=this.spaces.find(o).conversions.find(t),n&&"function"==typeof n||this.spaces.find(o).conversions.add(t,i),o===e)return i;if(!r[o])return null;i=o,o=r[o],s++}throw new Error("something went wrong while mapping the path from"+e+" to "+t)},o.findConversionPath=function(e,t){var n=[],r=[],i={};for(n.push(e),r.push(e);n.length;){var o=n.pop();if(o===t)return i;for(var s=this.spaces.findNeighbors(o),c=0;c<s.length;c++){var a=s[c];-1===r.indexOf(a)&&(i[a]=o,r.push(a),n.push(a))}}return null},e.exports=o},function(e,t,n){"use strict";var r=n(9),i=r.extend();i.add=function(e){var t=Object.getPrototypeOf(i);t.add.call(this,e.space,e)},i.findNeighbors=function(e){var t=[],n=this.find(e);if(null===n)return t;var r=n.conversions;return r.each(function(e,n){var r=this.find(n);r&&r.is_concrete&&t.push(n)},this),t},i.merge=function(e){e.each(function(e,t){var n=this.find(t);n?this.mergeSpaces(n,e):this.store[t]=e},this)},i.mergeSpaces=function(e,t){var n=!e.is_concrete&&t.is_concrete;n&&t.limits&&e.limits.merge(t.limits),e.conversions.merge(t.conversions,{force:n}),n&&(e.is_concrete=!0)},e.exports=i},function(e,t,n){"use strict";var r=n(7),i=n(10),o=i.extend();o.init=function(e,t,n){e&&(this.min=e),t&&(this.max=t),n&&(this.handler=n)},o.check=function(e){return e=this.checkBoundary("min",e),e=this.checkBoundary("max",e)},o.checkBoundary=function(e,t){var n=this[e];return t&&n&&"raw"!==this.handler?(r.each(n,function(n,r){if(this.breaks(n,t[r],e))if("clip"===this.handler)t[r]=n;else{if("nullify"===this.handler)return t=null;if("strict"===this.handler){var i="max"===this.handler?"less":"greater";throw new Error("Expected "+t[r]+" to be "+i+" than or equal to "+n)}}},this),t):t},o.breaks=function(e,t,n){return"max"===n?t>e:"min"===n?e>t:void 0},o.merge=function(e){void 0!==e.min&&(this.min=e.min),void 0!==e.max&&(this.max=e.max)},e.exports=o},function(e,t){"use strict";t.clone=function n(e){var r,i=Object(e);switch(i.constructor){case String:r=i.toString();break;case Number:r=Number(i);break;case Array:r=[],t.each(i,function(e,t){r[t]=n(e)});break;default:throw new TypeError("Alchemist does not know how to clone "+e)}return r},t.isArray=function(e){return Array.isArray(e)},t.isObject=function(e){return Boolean(e&&"object"==typeof e)},t.isFunction=function(e){return"function"==typeof e},t.isPlainObject=function(e){return e&&"[object Object]"===toString.call(e)?Object.getPrototypeOf(e)===Object.prototype:!1},t.isString=function(e){return"string"==typeof e},t.each=function(e,n,r){var i;if(r=r||null,t.isArray(e)){for(var o=e.length,s=0;o>s;s++)if(i=n.call(r,e[s],s),void 0!==i)return i}else for(var c in e)if(i=n.call(r,e[c],c),void 0!==i)return i;return null},t.round=function(e,n){if(n=n||4,t.isArray(e))for(var r=0;r<e.length;r++)e[r]=this.roundIfNumber(e[r],n);else e=t.roundIfNumber(e,n);return e},t.roundIfNumber=function(e,t){return"number"==typeof e&&(e=Number(e.toPrecision(t))),e}},function(e,t,n){"use strict";var r=n(9),i=r.extend();i.merge=function(e,t){t=t||{},e.each(function(e,n){var r=this.find(n);(t.force||!r||"string"==typeof r)&&(this.store[n]=e)},this)},e.exports=i},function(e,t,n){"use strict";var r=n(7),i=n(10),o=i.extend();o.init=function(){this.store={}},o.add=function(e,t){if(this.store[e])throw new Error('the key "'+e+'" already exists in this store');this.store[e]=t},o.find=function(e){return this.store[e]||null},o.has=function(e){return Boolean(this.find(e))},o.remove=function(e){delete this.store[e]},o.each=function(e,t){return r.each.call(this,this.store,e,t)},o.merge=function(e){e.each(function(e,t){var n=this.find(t);n?n.merge(e):this.store[t]=e},this)},e.exports=o},function(e){function t(e){return function(t){return arr_len=e.length,e.indexOf(t)<0}}e.exports={create:function(){var e=Object.create(this);return e.init.apply(e,arguments),e},extend:function(){return Object.create(this)},init:function(){return Object.defineProperty(this,"_keep",{configurable:!0,enumerable:!1,writable:!0,value:Object.getOwnPropertyNames(this)}),this.initializer&&this.initializer.apply(this,arguments),this},reset:function(){var e=Object.keys(this);newKeys=e.filter(t(this._keep)),newKeys_len=newKeys.length;for(var n=0;newKeys_len>n;n++)delete this[newKeys[n]];return this},get proto(){return Object.getPrototypeOf(this)},set proto(e){Object.setPrototypeOf?Object.setPrototypeOf(e):this.__proto__=e}}}])});